{"version":3,"sources":["utils.js","App.context.js","Modal/Modal.context.js","styleGlobals.js","Button.js","Card/CardButtons.js","assets/Calendar.js","Card/Card.js","Column.js","Modal/Modal.js","Forms/TaskForm.js","App.js","serviceWorker.js","index.js"],"names":["stages","backlog","inProgress","completed","getKeyForStage","stage","Object","keys","find","key","getTasksByStage","tasks","reduce","filteredTasks","currentId","AppContext","React","createContext","useApp","useContext","AppProvider","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","currentTaskId","onChange","value","setState","defineProperty","saveTask","_ref","id","title","description","dueDate","_this$state","currentStage","newTask","uuid","Date","objectSpread","deleteTask","_this$state$tasks","newTasks","objectWithoutProperties","map","_toPropertyKey","updateTaskStage","taskId","newStage","newDueDate","inherits","createClass","props","react_default","a","createElement","Provider","children","Component","AppConsumer","Consumer","ModalContext","useModal","ModalProvider","shouldShowModal","toggleModal","ModalConsumer","colors","defaultFont","css","_templateObject","button","Button_templateObject","Button","label","onClick","buttonStyle","isSecondaryStyle","type","style","--background-color","className","buttonWrapper","CardButtons_templateObject","cardButton","_templateObject2","CardButtons","src_Button","react","calendar","Calendar_templateObject","Calendar","color","iconStyle","viewBox","fill","d","Container","styled","div","Card_templateObject","isCompleted","Body","Card_templateObject2","heading","_templateObject3","subscript","_templateObject4","text","_templateObject5","icon","_templateObject6","Card","e","stopPropagation","assets_Calendar","toDateString","Card_CardButtons","Column_templateObject","canCreateTask","h2","Column_templateObject2","large","Column_templateObject3","Column","Column_Container","entries","_ref2","index","_ref3","slicedToArray","task","src_Card_Card","assign","preventDefault","modal","Modal_templateObject","background","Modal_templateObject2","Modal","taskForm","TaskForm_templateObject","TaskForm_templateObject2","input","TaskForm_templateObject3","largeInput","TaskForm_templateObject4","TaskForm_templateObject5","danger","TaskForm_templateObject6","flatButton","_templateObject7","TaskForm","_useApp","_useState","useState","_useState2","values","setValues","target","name","onSubmit","placeholder","required","onFocus","currentTarget","onBlur","toLocaleString","split","app","App_templateObject","appInner","App_templateObject2","App","App_context_AppProvider","Modal_context_ModalProvider","_ref4","src_Column","src_Modal_Modal","Forms_TaskForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54fc0d29.chunk.js","sourcesContent":["export const stages = {\n  backlog: \"Backlog\",\n  inProgress: \"In Progress\",\n  completed: \"Completed\",\n};\n\nexport const getKeyForStage = stage =>\n  Object.keys(stages).find(key => stages[key] === stage);\n\nexport const getTasksByStage = (tasks, stage) => {\n  return Object.keys(tasks).reduce(function(filteredTasks, currentId) {\n    if (tasks[currentId].stage === stage)\n      filteredTasks[currentId] = tasks[currentId];\n    return filteredTasks;\n  }, {});\n};\n","import React, { useContext } from \"react\";\nimport uuid from \"uuid/v4\";\nimport { stages } from \"./utils\";\n\nconst AppContext = React.createContext();\nexport const useApp = () => useContext(AppContext);\n\nexport class AppProvider extends React.Component {\n  state = {\n    stage: null,\n    currentTaskId: null,\n    tasks: {},\n  };\n\n  onChange = (key, value) => {\n    this.setState({ [key]: value });\n  };\n\n  saveTask = ({ title, description, dueDate }, id) => {\n    const { stage, tasks } = this.state;\n    const currentStage = tasks[id] ? tasks[id].stage : stage;\n    const newTask = {\n      [id || uuid()]: {\n        title,\n        description,\n        dueDate: new Date(dueDate),\n        stage: currentStage,\n      },\n    };\n    this.setState({ tasks: { ...this.state.tasks, ...newTask } });\n  };\n\n  deleteTask = id => {\n    const { [id]: value, ...newTasks } = this.state.tasks;\n    this.setState({ tasks: newTasks });\n  };\n\n  updateTaskStage = (taskId, newStage) => {\n    const newDueDate =\n      stages[newStage] === stages.completed\n        ? new Date()\n        : this.state.tasks[taskId].dueDate;\n\n    this.setState({\n      tasks: {\n        ...this.state.tasks,\n        [taskId]: {\n          ...this.state.tasks[taskId],\n          stage: newStage,\n          dueDate: newDueDate,\n        },\n      },\n    });\n  };\n\n  render() {\n    const { props, state } = this;\n    return (\n      <AppContext.Provider\n        value={{\n          onChange: this.onChange,\n          saveTask: this.saveTask,\n          deleteTask: this.deleteTask,\n          currentTaskId: state.currentTaskId,\n          updateTaskStage: this.updateTaskStage,\n          tasks: state.tasks,\n        }}\n      >\n        {props.children}\n      </AppContext.Provider>\n    );\n  }\n}\nexport const AppConsumer = AppContext.Consumer;\n","import React, { useContext } from 'react';\n\nconst ModalContext = React.createContext();\nexport const useModal = () => useContext(ModalContext);\n\nexport class ModalProvider extends React.Component {\n  state = {\n    stage: null,\n    shouldShowModal: false,\n  }\n\n  toggleModal = (stage) => {\n    this.setState({ shouldShowModal: !this.state.shouldShowModal, stage })\n  }\n\n  render() {\n    const { props, state } = this\n    return (\n      <ModalContext.Provider\n        value={{\n          toggleModal: this.toggleModal,\n          shouldShowModal: state.shouldShowModal,\n          stage: state.stage,\n        }}\n      >\n        {props.children}\n      </ModalContext.Provider>\n    )\n  }\n}\n\nexport const ModalConsumer = ModalContext.Consumer;\n","import { css } from \"emotion\";\n\nexport const colors = {\n  blue: \"#60a7f0\",\n  green: \"#5bcebd\",\n  red: \"#ec3330\",\n  purple: \"#7858f6\",\n  lightGrey: \"#f4f3f8\",\n  darkGrey: \"#e9e9ef\",\n  white: \"#fff\",\n};\n\nexport const defaultFont = css`\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 14px;\n`;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport { colors, defaultFont } from \"./styleGlobals\";\n\nconst button = css`\n  ${defaultFont};\n  height: 42px;\n  background-color: var(--background-color);\n  color: ${colors.white};\n  border: none;\n  border-radius: 8px;\n  padding: 14px 18px;\n  &:hover {\n    background-color: ${colors.purple};\n    cursor: pointer;\n  }\n`;\n\nconst Button = ({ label, onClick, buttonStyle, isSecondaryStyle, type }) => {\n  return (\n    <button\n      style={{\n        \"--background-color\": `${\n          isSecondaryStyle ? colors.green : colors.blue\n        }`,\n      }}\n      type={type ? type : \"button\"}\n      className={`${button} ${buttonStyle}`}\n      onClick={onClick}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Fragment } from \"react\";\nimport { css } from \"emotion\";\nimport Button from \"../Button\";\nimport { useApp } from \"../App.context\";\nimport { getKeyForStage, stages } from \"../utils\";\nimport { colors } from \"../styleGlobals\";\n\nconst buttonWrapper = css`\n  display: flex;\n`;\n\nconst cardButton = css`\n  width: 100%;\n  border-radius: 0;\n`;\n\nconst CardButtons = ({ id, stage }) => {\n  const { updateTaskStage } = useApp();\n  const currentStage = stages[stage];\n\n  return (\n    <div className={buttonWrapper}>\n      {currentStage === stages.backlog && (\n        <Button\n          buttonStyle={cardButton}\n          onClick={() => updateTaskStage(id, getKeyForStage(stages.inProgress))}\n          label='Start'\n        />\n      )}\n      {currentStage === stages.inProgress && (\n        <Fragment>\n          <Button\n            buttonStyle={cardButton}\n            onClick={() => updateTaskStage(id, getKeyForStage(stages.backlog))}\n            label='Backlog'\n          />\n          <Button\n            buttonStyle={cardButton}\n            isSecondaryStyle\n            onClick={() =>\n              updateTaskStage(id, getKeyForStage(stages.completed))\n            }\n            label='Complete'\n          />\n        </Fragment>\n      )}\n      {currentStage === stages.completed && (\n        <Button\n          buttonStyle={cardButton}\n          onClick={() => updateTaskStage(id, getKeyForStage(stages.inProgress))}\n          label='Undo'\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CardButtons;\n","import React from \"react\";\nimport { css } from \"emotion\";\n\nconst calendar = css`\n  vertical-align: middle;\n`;\n\nconst Calendar = ({ color, iconStyle }) => (\n  <svg\n    className={`${calendar} ${iconStyle}`}\n    viewBox='0 0 485.213 485.212'\n    fill={color}\n  >\n    <path d='M60.652 75.816V15.163C60.652 6.781 67.433 0 75.817 0c8.38 0 15.161 6.781 15.161 15.163v60.653c0 8.38-6.781 15.161-15.161 15.161-8.384.001-15.165-6.781-15.165-15.161zm257.772 15.162c8.378 0 15.163-6.781 15.163-15.161V15.163C333.587 6.781 326.802 0 318.424 0c-8.382 0-15.168 6.781-15.168 15.163v60.653c0 8.38 6.786 15.162 15.168 15.162zm166.788 272.928c0 66.996-54.312 121.307-121.303 121.307-66.986 0-121.302-54.311-121.302-121.307 0-66.986 54.315-121.3 121.302-121.3 66.991 0 121.303 54.313 121.303 121.3zm-30.322 0c0-50.161-40.81-90.976-90.98-90.976-50.166 0-90.976 40.814-90.976 90.976 0 50.171 40.81 90.98 90.976 90.98 50.17 0 90.98-40.809 90.98-90.98zM121.305 181.955H60.652v60.651h60.653v-60.651zM60.652 333.584h60.653V272.93H60.652v60.654zm90.977-90.978h60.654v-60.651h-60.654v60.651zm0 90.978h60.654V272.93h-60.654v60.654zM30.328 360.891V151.628H363.91v60.653h30.327V94c0-18.421-14.692-33.349-32.843-33.349h-12.647v15.166c0 16.701-13.596 30.325-30.322 30.325-16.731 0-30.326-13.624-30.326-30.325V60.651H106.14v15.166c0 16.701-13.593 30.325-30.322 30.325-16.733 0-30.327-13.624-30.327-30.325V60.651H32.859C14.707 60.651.001 75.579.001 94v266.892c0 18.36 14.706 33.346 32.858 33.346h179.424v-30.331H32.859c-1.374-.001-2.531-1.42-2.531-3.016zm272.928-118.285v-60.651h-60.648v60.651h60.648zm106.143 121.3h-45.49v-45.49c0-8.377-6.781-15.158-15.163-15.158s-15.159 6.781-15.159 15.158v60.658c0 8.378 6.777 15.163 15.159 15.163h60.653c8.382 0 15.163-6.785 15.163-15.163 0-8.382-6.781-15.168-15.163-15.168z' />\n  </svg>\n);\n\nexport default Calendar;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport { useApp } from \"../App.context\";\nimport { useModal } from \"../Modal/Modal.context\";\nimport CardButtons from \"./CardButtons\";\nimport Calendar from \"../assets/Calendar\";\nimport { stages } from \"../utils\";\nimport { colors } from \"../styleGlobals\";\n\nconst Container = styled.div`\n  margin: 15px 10px auto 10px;\n  font-size: 12px;\n  border-radius: 4px;\n  overflow: hidden;\n  background-color: ${props =>\n    props.isCompleted ? `${colors.darkGrey}` : `${colors.white}`};\n`;\n\nconst Body = styled.div`\n  border: ${props =>\n    `2px solid ${props.isCompleted ? \"transparent\" : `${colors.darkGrey}`}`};\n  border-bottom: 0;\n  padding: 18px 12px 14px 12px;\n  &:hover {\n    cursor: pointer;\n    background-color: ${colors.darkGrey};\n  },\n`;\n\nconst heading = css`\n  margin: 0 0 15px 0;\n  font-size: 12px;\n`;\n\nconst subscript = css`\n  font-style: italic;\n  margin: 14px 0 0 0;\n`;\n\nconst text = css`\n  margin-left: 5px;\n`;\n\nconst icon = css`\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n`;\n\nconst Card = ({ description, dueDate, id, title, stage }) => {\n  const { onChange } = useApp();\n  const { toggleModal } = useModal();\n\n  const onClick = e => {\n    e.stopPropagation();\n    onChange(\"currentTaskId\", id);\n    toggleModal();\n  };\n\n  const isCompleted = stages[stage] === stages.completed;\n\n  return (\n    <Container isCompleted={isCompleted}>\n      <Body isCompleted={isCompleted} onClick={onClick}>\n        <h2 className={heading}>{title}</h2>\n        {description}\n        <p\n          className={subscript}\n          style={{ color: isCompleted ? colors.green : colors.purple }}\n        >\n          {isCompleted ? (\n            <span className={icon}>&#10004;</span>\n          ) : (\n            <Calendar color={colors.purple} iconStyle={icon} />\n          )}\n          <span className={text}>\n            {isCompleted ? `Completed` : `Due`} {dueDate.toDateString()}\n          </span>\n        </p>\n      </Body>\n      <CardButtons stage={stage} id={id} />\n    </Container>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport { useApp } from \"./App.context\";\nimport { useModal } from \"./Modal/Modal.context\";\nimport Card from \"./Card/Card\";\nimport Button from \"./Button\";\nimport { colors } from \"./styleGlobals\";\n\nconst Container = styled.div`\n  width: 240px;\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: hidden;\n  background-color: ${colors.white};\n  border-radius: 8px;\n  margin: 0 8px;\n  padding-bottom: ${props => (props.canCreateTask ? \"0\" : \"57px\")};\n`;\n\nconst h2 = css`\n  margin: 30px 22px 0 22px;\n  font-size: 14px;\n`;\n\nconst large = css`\n  border-radius: 0;\n  margin-top: 15px;\n`;\n\nconst Column = ({ canCreateTask, heading, tasks, stage }) => {\n  const { onChange } = useApp();\n  const { toggleModal } = useModal();\n\n  const onClick = e => {\n    e.preventDefault();\n    onChange(\"stage\", stage);\n    onChange(\"currentTaskId\", null);\n    toggleModal();\n  };\n\n  return (\n    <Container canCreateTask={canCreateTask}>\n      <h2 className={h2}>{heading}</h2>\n      {Object.entries(tasks).map(([id, task], index) => {\n        return <Card key={index} id={id} {...task} />;\n      })}\n      {canCreateTask && (\n        <Button label='Create Task' onClick={onClick} buttonStyle={large} />\n      )}\n    </Container>\n  );\n};\n\nexport default Column;\n","import React, { Fragment } from \"react\";\nimport { css } from \"emotion\";\nimport { colors } from \"../styleGlobals\";\n\nconst modal = css`\n  position: absolute;\n  top: 40px;\n  left: 0;\n  right: 0;\n  width: 420px;\n  margin: 0 auto;\n  padding: 34px;\n  background-color: ${colors.white};\n  border-radius: 8px;\n  box-shadow: 0px 0px 6px ${colors.lightGrey};\n`;\n\nconst background = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0.5;\n  background-color: ${colors.white};\n`;\n\nconst Modal = ({ children }) => {\n  return (\n    <Fragment>\n      <div className={background} />\n      <div className={modal}>{children}</div>\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport { css } from \"emotion\";\nimport { useModal } from \"../Modal/Modal.context\";\nimport { useApp } from \"../App.context\";\nimport Button from \"../Button\";\nimport { colors } from \"../styleGlobals\";\n\nconst taskForm = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst heading = css`\n  margin: 0 0 12px 0;\n  font-size: 16px;\n`;\n\nconst input = css`\n  min-height: 32px;\n  border: 2px solid ${colors.darkGrey};\n  border-radius: 5px;\n  padding: 5px;\n  margin: 5px 0;\n`;\n\nconst largeInput = css`\n  ${input};\n  min-height: 64px;\n  max-width: 352px;\n`;\n\nconst buttonWrapper = css`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 14px;\n`;\n\nconst danger = css`\n  margin-right: auto;\n  background-color: ${colors.red};\n`;\n\nconst flatButton = css`\n  color: ${colors.blue};\n  background-color: transparent;\n  margin-right: 8px;\n  &:hover {\n    color: ${colors.white};\n  }\n`;\n\nconst TaskForm = ({ title, description, dueDate, id }) => {\n  const { toggleModal } = useModal();\n  const { saveTask, deleteTask } = useApp();\n\n  const [values, setValues] = useState({\n    title: title || \"\",\n    description: description || \"\",\n    dueDate: dueDate || \"\",\n  });\n\n  const onChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onDelete = () => {\n    deleteTask(id);\n    toggleModal();\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    saveTask(values, id);\n    toggleModal();\n  };\n\n  return (\n    <form className={taskForm} onSubmit={onSubmit}>\n      <h1 className={heading}> {title ? `Edit task` : `Create New Task`} </h1>\n      <input\n        type='text'\n        value={values.title}\n        placeholder='Title'\n        name='title'\n        className={input}\n        onChange={onChange}\n        required\n      />\n      <textarea\n        type='text'\n        value={values.description}\n        placeholder='Description'\n        name='description'\n        className={largeInput}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        onFocus={e => (e.currentTarget.type = \"date\")}\n        onBlur={e => (e.currentTarget.type = \"text\")}\n        value={values.dueDate.toLocaleString().split(\",\")[0]}\n        placeholder='Due on'\n        name='dueDate'\n        className={input}\n        onChange={onChange}\n        required\n      />\n\n      <div className={buttonWrapper}>\n        {title && (\n          <Button label='Delete' buttonStyle={danger} onClick={onDelete} />\n        )}\n        <Button label='Cancel' buttonStyle={flatButton} onClick={toggleModal} />\n        {title ? (\n          <Button type='submit' label='Save' />\n        ) : (\n          <Button type='submit' label='Create' />\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport { AppProvider, AppConsumer } from \"./App.context.js\";\nimport { ModalProvider, ModalConsumer } from \"./Modal/Modal.context\";\nimport Column from \"./Column\";\nimport Modal from \"./Modal/Modal\";\nimport TaskForm from \"./Forms/TaskForm\";\nimport { getTasksByStage, stages } from \"./utils\";\nimport { colors, defaultFont } from \"./styleGlobals\";\n\nconst app = css`\n  position: relative;\n  height: 100%;\n  padding: 40px;\n  background-color: ${colors.lightGrey};\n  ${defaultFont};\n`;\n\nconst appInner = css`\n  display: flex;\n  justify-content: center;\n`;\n\nconst App = () => {\n  return (\n    <AppProvider>\n      <AppConsumer>\n        {({ currentTaskId, tasks }) => (\n          <ModalProvider>\n            <ModalConsumer>\n              {({ shouldShowModal }) => (\n                <div className={app}>\n                  <div className={appInner}>\n                    {Object.entries(stages).map(([key, value]) => (\n                      <Column\n                        key={key}\n                        heading={value}\n                        canCreateTask={value !== stages.completed}\n                        stage={key}\n                        tasks={getTasksByStage(tasks, key)}\n                      />\n                    ))}\n                    {shouldShowModal && (\n                      <Modal>\n                        <TaskForm\n                          id={currentTaskId}\n                          {...tasks[currentTaskId]}\n                        />\n                      </Modal>\n                    )}\n                  </div>\n                </div>\n              )}\n            </ModalConsumer>\n          </ModalProvider>\n        )}\n      </AppConsumer>\n    </AppProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}